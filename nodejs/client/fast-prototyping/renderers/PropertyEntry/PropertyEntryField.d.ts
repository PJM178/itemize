/// <reference types="react" />
import { IPropertyEntryFieldRendererProps } from "../../../internal/components/PropertyEntry/PropertyEntryField";
import { IPropertyEntryThemeType } from "./styles";
export declare const style: (theme: IPropertyEntryThemeType) => Record<"entry" | "file" | "label" | "description" | "container" | "errorMessage" | "standardAddornment" | "iconButtonPassword" | "iconButton" | "textButton" | "labelSingleLine" | "fieldInput" | "selectFieldIconWhenAddornmentIsActive" | "unitDialog" | "unitDialogSubheader" | "autosuggestContainer" | "autosuggestContainerOpen" | "autosuggestInput" | "autosuggestInputOpen" | "autosuggestSuggestionsContainer" | "autosuggestSuggestionsContainerOpen" | "autosuggestSuggestionsList" | "autosuggestSuggestion" | "autosuggestFirstSuggestion" | "autosuggestSuggestionHighlighted" | "autosuggestSectionContainer" | "autosuggestFirstSectionContainer" | "autosuggestSectionTitle" | "autosuggestMenuItem" | "autosuggestMenuItemMainText" | "autosuggestMenuItemSubText" | "locationAlternativeTextHeader" | "locationMapContainer" | "quill" | "fileRejected" | "fileDataContainer" | "fileDeleteButton" | "fileName" | "fileSize" | "fileRejectedDescription" | "fileIcon" | "fileMimeType" | "filesPaper" | "filesPaperSingleFile" | "filesPlaceholder" | "filesPlaceholderAccepting" | "filesPlaceholderRejecting" | "filesIconAdd" | "filesSingleFileButtonContainer" | "filesSingleFileButton" | "filesSingleFileButtonIcon" | "imageThumbnail", import("@material-ui/styles").CSSProperties | import("@material-ui/styles").CreateCSSProperties<IPropertyEntryFieldRendererProps> | ((props: IPropertyEntryFieldRendererProps) => import("@material-ui/styles").CreateCSSProperties<IPropertyEntryFieldRendererProps>)>;
export default function PropertyEntryFieldRenderer(props: IPropertyEntryFieldRendererProps): JSX.Element;

TODO TECH

A) We need to implement search limiters, search limiters represent properties, eg.
limitSearchByOwner: boolean
limitSearchByParent: boolean
limitSearchByProperties: []

these limiters will allow for reasonable searches

B) Implement flagging

C) Implement some form of triggers, maybe callback functions in the resolvers, we should have some form of user trigger to remove e_validated and
  whatnot

D) Design a framework for versioning
Versions is a module level property, all underlying items are affected.
it will take part of a SQL property called version

id will remain being the serial but the primary key will be the combination of the id + the version
by default the version is null
if versioning is enabled (let's start with) an arbitrary string called the version is allowed to be
set (or null) by the creator
when retrieving a single value also a version must be set, check out how requestCache function is set
the ID_CONTAINER now must contain a version, check IGQLSearchResultIdentifierType too
searches can be done as well by specifying a version that will namespace the search into that version
The saving in the IndexedDB database must now include the version as well
this changes how the websockets communicate as version information must now be included
Registries get affected, everything that relies on an id gets affected
everything else should remain the same
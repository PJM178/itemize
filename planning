TODO TECH

A) We need to implement search limiters, search limiters represent properties, eg.
limitSearchByOwner: boolean
limitSearchByParent: boolean
limitSearchByProperties: []

these limiters will allow for reasonable searches

B) We need to implement a way to cache 

C) Historic values for some properties
We need to add historic values that show how a value has changed
it will create a property_HISTORIC which will be an array of itself
and property_HISTORIC_
and will keep all the historic changes

Actually I am not sure about this, parented items should suffice, but surely
parented will be a pain in the ass to cache and will take a lot of space compared
to historic





Implement flagging

- Implement some form of triggers, maybe callback functions in the resolvers, we should have some form of user trigger to remove e_validated and
  whatnot


Add parents, should work as

canBeParented   boolean
mustBeParented  boolean
canOnlyBeParentedBy {
    module: path/path/path,
    itemDefinition: path/path/path,
}

Searches should have then

parented_by     qualifiedPathName

parented by searches should be able to be updated or something and have some sort
of listener for parented searches
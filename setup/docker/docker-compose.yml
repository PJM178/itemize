version: '3.3'
services: 
    cluster-manager:
        image: app:latest
        restart: always
        volumes: 
            - ./config:/home/node/app/config
            - ./logs:/home/node/app/logs
            - ./uploads:/home/node/app/uploads
            - ./patch/dist:/home/node/app/dist
            - ./patch/nodejs:/home/node/app/node_modules/@onzag/itemize/nodejs
        depends_on:
            - redis
            - elastic
        environment:
            - INSTANCE_GROUP_ID=${INSTANCE_GROUP_ID}
            - INSTANCE_MODE=CLUSTER_MANAGER
            - NODE_ENV=%{NODE_ENV}
            - LOG_LEVEL=info
            - USING_DOCKER=true
            - FORCE_CONSOLE_LOGS=false
    global-manager:
        image: app:latest
        restart: always
        volumes: 
            - ./config:/home/node/app/config
            - ./logs:/home/node/app/logs
            - ./uploads:/home/node/app/uploads
            - ./patch/dist:/home/node/app/dist
            - ./patch/nodejs:/home/node/app/node_modules/@onzag/itemize/nodejs
        depends_on:
            - redis
            - pgsql
            - elastic
        environment:
            - INSTANCE_GROUP_ID=${INSTANCE_GROUP_ID}
            - INSTANCE_MODE=GLOBAL_MANAGER
            - NODE_ENV=%{NODE_ENV}
            - LOG_LEVEL=info
            - USING_DOCKER=true
            - FORCE_CONSOLE_LOGS=false
    servers:
        image: app:latest
        restart: always
        depends_on:
            - redis
            - pgsql
            - global-manager
            - cluster-manager
            - elastic
        ports:
            - "8000"
        volumes:
            - ./config:/home/node/app/config
            - ./logs:/home/node/app/logs
            - ./uploads:/home/node/app/uploads
            - ./patch/dist:/home/node/app/dist
            - ./patch/nodejs:/home/node/app/node_modules/@onzag/itemize/nodejs
        environment: 
            - INSTANCE_GROUP_ID=${INSTANCE_GROUP_ID}
            - INSTANCE_MODE=EXTENDED
            - NODE_ENV=%{NODE_ENV}
            - PORT=8000
            - LOG_LEVEL=info
            - USING_DOCKER=true
            - NO_SSR=false
            - NO_SEO=false
            - FAKE_EMAILS=false
            - FAKE_SMS=false
            - FAKE_USSD=false
            - FORCE_CONSOLE_LOGS=false
    redis:
        image: redis:latest
        restart: always
    nginx:
        image: nginx:latest
        restart: always
        ports:
            - "80:80"
            - "443:443"
        depends_on:
            - servers
        volumes:
            - ./key.pem:/etc/key.pem:ro
            - ./cert.pem:/etc/cert.pem:ro
            - ./nginx.processed.conf:/etc/nginx/nginx.conf:ro
            - ./nginx-logs:/var/log/nginx
    pgsql:
        image: postgis/postgis:latest
        restart: always
        volumes: 
            - ./pgdata:/var/lib/postgresql/data
        environment:
            - POSTGRES_USER=%{DB_USER}
            - POSTGRES_PASSWORD=%{DB_PASSWORD}
            - POSTGRES_DB=%{DB_NAME}
    elastic:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.2.0
        restart: always
        environment:
            - ELASTIC_PASSWORD=%{ELASTIC_PASSWORD}
    kibana:
        image: docker.elastic.co/kibana/kibana:8.2.0
        restart: always
        ports:
            - "5601:5601"
